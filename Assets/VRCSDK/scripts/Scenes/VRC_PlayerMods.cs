/// <summary>
/// 
/// VRC_Player Mods.
/// Can be used to grant modifications to all players in the room or individual players based on event triggers.
/// 
/// @param isRoomPlayerMods denotes whether player mods will be applied to every player upon joining the room
/// @param removePlayerMods if checked, will create a use event that will remove any event added player mods
/// 
/// @usage 
/// To apply modifications to every player upon entering the room, attach this script to the root of your room and set isRoomPlayerMods to true.  
/// To apply modifications to an individual player based on an event trigger, attach this script to a game object, set isRoomPlayerMods to false and press Add Mods.
/// To remove modifications from an individual player based on an event trigger, attach this script to a game object, set isRoomPlayerMods to false and press Remove Mods Event.
/// Each of these actions automatically adds the correct event to the VRC_EventHandler (which is auto-added when you add this script). 
/// For more control over the event trigger, add a collider onto your VRC_PlayerMod object. This is auto-added at runtime if you don't provide them.
/// 
/// @notes 
/// If isRoomPlayerMods is checked, no further scripts are needed. Only one isRoomPlayerMods script allowed per scene.
/// If isRoomPlayerMods is unchecked, you are using this script as an event response.
/// The collider is the actual object we are hitting for event triggers. Move and shape it as you see fit.
/// 
/// @types
/// 
/// Jump
/// 	jumpPower - how much power to put into the jump. Default is 3f.
/// 
/// Speed
/// 	runSpeed - how fast the player moves when running. Default is 4.0f.
/// 	walkSpeed - how fast the player moves when walking. Default is 2.0f.
/// 	strafeSpeed - how fast the player moves when strafing. Default is 2.0f.
/// 
/// Voice
/// 	talkDistace - increases the how far a player can be heard and increases overall player voice volume. Default is 20.0f.
/// 	is3DMode - when false, voice chat falls back to 2D mode where players' distance from eachother does not affect voice volume.
/// 
/// RoomKeys
/// 	EventHandler - the gameobject that contains the event handler that handles events generated by a keypress
/// 	EventName - the name of the event that is raised
/// 	EventKey - the key that will raise the event
/// 	EventBroadcast - the broadcast settings of the event (is it local only, or sent to everyone?)
/// 	Note: There are 10 sets of these variables, that default to the numbers across the top of your keyboard, but the key can be overriden to anything
/// 	
/// </summary>
///

using UnityEngine;
using System.Collections;
using System.Collections.Generic;

[RequireComponent (typeof(VRC_EventHandler))]
public class VRC_PlayerMods : MonoBehaviour 
{
	public bool isRoomPlayerMods = false;

	[HideInInspector]
	public List<VRCPlayerMod> playerMods = new List<VRCPlayerMod>();

	void Awake () 
	{
#if VRC_CLIENT
		PlayerMods playerModsComponent = gameObject.AddComponent<PlayerMods>();
		playerModsComponent.isRoomPlayerMods = isRoomPlayerMods;
		playerModsComponent.playerMods = playerMods;
		Destroy(this);
#endif
	}

	public void AddMod(VRCPlayerMod mod)
	{
		bool containsMod = false;
		foreach(VRCPlayerMod m in playerMods)
		{
			if(m.Equals(mod))
			{
				containsMod = true;
			}
		}
		if(!containsMod)
		{
			playerMods.Add (mod);
		}
	}

	public void RemoveMod(VRCPlayerMod mod)
	{
		foreach(VRCPlayerMod m in playerMods)
		{
			if(m.name == mod.name)
			{
				playerMods.Remove(m);
				break;
			}
		}
	}
}